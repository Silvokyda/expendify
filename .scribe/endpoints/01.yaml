name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'This endpoint allows users to create a new account. Returns a Sanctum PAT token if token_auth is true.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password (min: 8 characters)."
        required: true
        example: secret12345
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_auth:
        name: token_auth
        description: 'If true, returns a Personal Access Token for mobile/external use.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane@example.com
      password: secret12345
      token_auth: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Registered",
            "data": {
              "user": {
                "id": 1,
                "name": "Jane Doe",
                "email": "jane@example.com",
                "email_verified_at": null,
                "created_at": "2023-08-19T10:00:00.000000Z",
                "updated_at": "2023-08-19T10:00:00.000000Z"
              },
              "token": "1|abcdef1234567890"
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Registered",
            "data": {
              "user": {
                "id": 1,
                "name": "Jane Doe",
                "email": "jane@example.com",
                "email_verified_at": null,
                "created_at": "2023-08-19T10:00:00.000000Z",
                "updated_at": "2023-08-19T10:00:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: 'Web session (no token)'
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Validation failed",
            "data": {
              "errors": {
                "email": ["The email has already been taken."],
                "password": ["The password must be at least 8 characters."]
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      user:
        name: user
        description: 'The registered user object'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      token:
        name: token
        description: 'The Personal Access Token (only if token_auth=true)'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: 'Authenticate a user and return a Sanctum PAT token if token_auth is true, otherwise rely on cookie session.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: secret12345
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_auth:
        name: token_auth
        description: 'If true, returns a Personal Access Token for mobile/external use.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: jane@example.com
      password: secret12345
      token_auth: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logged in",
            "data": {
              "user": {
                "id": 1,
                "name": "Jane Doe",
                "email": "jane@example.com",
                "email_verified_at": "2023-08-19T10:00:00.000000Z",
                "created_at": "2023-08-19T10:00:00.000000Z",
                "updated_at": "2023-08-19T10:00:00.000000Z"
              },
              "token": "1|abcdef1234567890"
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logged in",
            "data": {
              "user": {
                "id": 1,
                "name": "Jane Doe",
                "email": "jane@example.com",
                "email_verified_at": "2023-08-19T10:00:00.000000Z",
                "created_at": "2023-08-19T10:00:00.000000Z",
                "updated_at": "2023-08-19T10:00:00.000000Z"
              }
            },
            "meta": {}
          }
        headers: []
        description: 'Web session (no token)'
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": "The provided credentials are incorrect.",
            "data": {
              "errors": {
                "email": ["The provided credentials are incorrect."]
              }
            },
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      user:
        name: user
        description: 'The authenticated user object'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      token:
        name: token
        description: 'The Personal Access Token (only if token_auth=true)'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: |-
        Revokes current PAT token if present (mobile) and ends web session.
        Requires authentication via either cookie session or bearer token.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logged out",
            "data": null,
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthenticated",
            "data": null,
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
